김미경(010-2062-5345)
1. 설치
code::blocks검색
https://www.codeblocks.org -->Download
Download the binary release -->codeblocks-20.03mingw-setup.exe

2. C진도
  1) 출력함수
  2) 입력함수 - 상수,변수, 자료형, 산술연산자
  3) if ~ else, if, 다중if, switch
     -관계연산자, 논리연산자,증감연산자, 복합산술연산자
  4) for, while, do ~ while, 다중반복문
  5) 배열(1차,2차)
  6) 포인터, 함수 
  7) 구조체, 구조체배열, 구조체포인터
  8) 파일
3. 특징
   1) 명령어수가 적고, 간단 --> 쉽다. 알고리즘구현에 적합
   2) 기계와 친함 (내장형H/W)
   3) 함수단위의 PRO.
   4) 절차지향언어
4. 주석문 : 실행과는 관계x, 사용자나 pg에게 설명을 주기 위함 
1) //한줄 주석
2) /*
     여러
      줄 
     주석
     */

5. 출력함수
1)  printf("출력 대상 문자열");
   ex)  printf("HELLO C언어!");

2) '\n' : 1byte문자, enter key(줄바꿈상수)
3) '\t' : 1byte문자, 정해진 위치에 커서를 둠 
4)  printf("출력 제어 문자열",출력대상1, 출력대상2);
   ex) printf("10 + 3 = %d\n",10+3);

6. 산술연산자 : +,-,*,/,
                   %(나머지를 구하는 연산자)
   1)  정수와 정수의 연산의 결과는 정수
          10/3 --->  3(몫)
   2)  정수와 실수의 연산의 결과는 실수
          10/3.0 --->  3.3333333....
7. data
   1) 정수 : 소숫점이 없는 수  ex)  10, -9999, 3
        출력 : %d(10진수)
                %o(8진수)
                %x(16진수) : 0~9,a,b,c,d,e,f
                %X(16진수) : 0~9,A,B,C,D,E,F
        자료형 : short(2) -  int(2) - long(4) : dos
   short(2) -  int(4)기본 - long(4) - long long(8) :                w/linux
         i)  -32768<=short<=32767
         ii)  -2147483648<=int,long<=2147483647

   2) 실수 : 소숫점이 있는 수 
    EX) double형실수 :  3.0,  3.14, 9.9999
           float형실수 :  3.0F,  3.14f, 9.9999F

        출력 : %f, %e
        자료형 : float(4) - double(8)기본 
                i) %f : 무조건 소수이하 6자리까지 출력
                ii) %.mf : 소수이하 m자리까지 출력
                iii) %n.mf : 전체n자리를 확보후,
                    소수이하 m자리까지 출력
   3) 문자상수 : 1byte문자 ex) 'a','+'
        출력 : %c
        자료형 : char(1)
  i) -128<=char(1)<=127범위안에서는 int형과 호환되는 성질

   4) 문자열상수 : 2byte이상의 문자열 
            ex) "a","ab c","홍 길 동"
        출력 : %s
        자료형 : char형 배열 

   5)  %nd  : n칸을 확보하여 오른쪽 정렬하여 출력
         %-nd  : n칸을 확보하여 왼쪽 정렬하여 출력
        ex)  %3d, %-12s, %4c

8. 변수(==그릇)
    1) 사용전 반드시 선언
    2) 반드시 초기값을 부여(하지 않으면 쓰레기값)
    3) 변수명규칙(==식별자규칙)
          i) 구성 : 영문자대소, 수0~9, _
          ii) 첫자는 수가 올수 없다
          iii) 예약어불가
          iv) 255자까지 가능
        ex) ab_c,  _RE, WE12, forab(o)
               for, 5srs, 이름(x)
9. 대입연산자 =
   변수=[  상수 또는 변수 또는 수식];
   상수 또는 변수 또는 수식의 결과를 왼쪽 변수에 저장시켜라!!
10.sizeof(자료형 또는 변수 또는 상수 )연산자:
자료형 또는 변수 또는 상수가 메모리상에서 차지하는 byte수를 구함
11.강제적형변환
  형) (자료형)변수
   int b=3;
   printf("%f\n", (double)b);//3.000000

12. 기호화상수
   형)  #define 기호화상수명 값
    ex)  #define PI 3.1415927
   1) 한번 값을 정한후, 변경을 원치 않는 경우
          예) 배열의 크기, 환율 
   2) 사전정의
   3) 기호화상수명은 식별자규칙을 적용하고, 대부분 대문자를 사용
   4)  pg.내에서 변경불가!!

 13. const상수
  형) const 값의 자료형 const상수명=값;
  ex)const double PI=3.1415927;
   1) 한번 값을 정한후, 변경을 원치 않는 경우
          예) 배열의 크기, 환율 
   2) 사전정의
   3) const상수명은 식별자규칙을 적용하고, 대부분 대문자를 사용
   4) pg.내에서 변경불가!!
  
14. 배열
     1) 동일한 자료형의 모임
     2) 메모리상의 연속공간에 배치
 char name[9]="홍 길 동";
15. 주소를 구하는 연산자 &
   1) &변수 : 변수가 매모리상에  위치한 주소를 구함 
   2) 주소의 출력 : %u
16. 
#include<ctype.h>
1) toupper('a') --->'A' : 1byte문자를 대문자로 변환하는 함수
2) tolower('A') --->'a' : 1byte문자를 소문자로 변환하는 함수




















 






























   






